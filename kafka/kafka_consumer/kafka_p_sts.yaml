apiVersion: v1
kind: Service
metadata:
  name: kafka-service
  namespace: kafka-con
  labels:
    name: kafka
spec:
  ports:
  - port: 9093
    name: kafka-port
    protocol: TCP
  selector:
    app: kafka
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: kafka-pdb
  namespace: kafka-con
spec:
  selector:
    matchLabels:
      app: kafka
  maxUnavailable: 1
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: kafka-consumer
  namespace: kafka-con
spec:
  selector:
    matchLabels:
      app: kafka
  serviceName: kafka-service
  replicas: 3 
  updateStrategy:
    type: RollingUpdate
  podManagementPolicy: OrderedReady
  template:
    metadata:
      labels:
        app: kafka
    spec:
      hostname: kafka
      restartPolicy: Always
      containers:
      - name: kafka
        # image: confluentinc/cp-kafka
        image: wurstmeister/kafka
        ports:
        - containerPort: 9093
        env:
        - name: MY_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: MY_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: MY_POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIPs
        - name: KAFKA_ADVERTISED_LISTENERS
          # value: PLAINTEXT://$(MY_POD_NAME).kafka-service.kafka.svc.cluster.local:9092
          value: PLAINTEXT://$(MY_POD_IP):9093
        - name: KAFKA_ZOOKEEPER_CONNECT
          value: zk-con-0.zk-hs.zk-con.svc.cluster.local:2181,zk-con-1.zk-hs.zk-con.svc.cluster.local:2181,zk-con-2.zk-hs.zk-con.svc.cluster.local:2181
        - name: KAFKA_LISTENERS
          value: PLAINTEXT://:9093
        - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
          value: "1"
        - name: KAFKA_LOG_DIRS
          value: /var/lib/kafka/data
        lifecycle:
              postStart:
                exec:
                  command:
                  - "sh"
                  - "-c"
                  - |
                    curl -X POST -H "Content-Type: application/json" --data "{\"text\":\" **pod** : ${MY_POD_NAME} \n **ip** : ${MY_POD_IP} \n start\"}" https://schat.smilegate.net/hooks/NvXfDWLhRzo9pnXei/7x6GbK8gckdWHvfdASoJtuAGmjLY6smmbTPCC5qAxcDaHYjH
              preStop:
                exec:
                  command:
                  - "sh"
                  - "-c"
                  - |
                    curl -X POST -H "Content-Type: application/json" --data "{\"text\":\" **pod** : ${MY_POD_NAME} \n **ip** : ${MY_POD_IP} \n stop\"}" https://schat.smilegate.net/hooks/NvXfDWLhRzo9pnXei/7x6GbK8gckdWHvfdASoJtuAGmjLY6smmbTPCC5qAxcDaHYjH
        volumeMounts:
        - name: kafkadir
          mountPath: /var/lib/kafka

  volumeClaimTemplates:
  - metadata:
      name: kafkadir
    spec:
      accessModes: ["ReadWriteOnce"]
      storageClassName: managed-nfs-storage
      resources:
        requests:
          storage: 10Gi